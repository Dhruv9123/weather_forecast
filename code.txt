from tkinter import *
import tkinter as tk
from tkinter import ttk,messagebox
from timezonefinder import TimezoneFinder
from datetime import *
import requests
import pytz
from PIL import Image, ImageTk

def getWeather():
    city = textfield.get()
    geocoding_api_key = '{your api key here}'
    geocoding_url = f"https://api.opencagedata.com/geocode/v1/json?q={city}&key={geocoding_api_key}"
    
    response = requests.get(geocoding_url).json()
    
    if response['results']:
        location = response['results'][0]['geometry']
        latitude = location['lat']
        longitude = location['lng']
        
        obj = TimezoneFinder()
        result = obj.timezone_at(lng=longitude, lat=latitude)
        timezone.config(text=result)
        
        if latitude >= 0:
            lat_dir = "N"
        else:
            lat_dir = "S"
            
        if longitude >= 0:
            lon_dir = "E"
        else:
            lon_dir = "W"
    
        long_lat.config(text=f"{round(abs(latitude), 4)}°{lat_dir}, {round(abs(longitude), 4)}°{lon_dir}")
        def update_clock():
            local_time = datetime.now(home)
            current_time = local_time.strftime("%I:%M:%S %p")
            clock.config(text=current_time)
            clock.after(1000, update_clock) 
        home = pytz.timezone(result)
        local_time = datetime.now(home)
        current_time = local_time.strftime("%I:%M:%S %p")
        clock.config(text=current_time)
        update_clock() 

        # Weather
        weather_api_key = '{your api key here}'
        weather_url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={weather_api_key}&units=metric"
        json_data = requests.get(weather_url).json()
        
        #main
        if 'main' in json_data:
            temp = json_data['main']['temp']
            humidity = json_data['main']['humidity']
            pressure = json_data['main']['pressure']
            wind = json_data['wind']['speed']
            description=json_data['weather'][0]['description']
        else:
            print("Error: 'main' key not found in API response")
    else:
        print("Error: No results found for the provided city name")
    t.config(text=(temp,"°C"))
    h.config(text=(humidity,"%"))
    p.config(text=(pressure,"hPa"))
    w.config(text=(wind,"m/s"))
    d.config(text=description)
    
    forecast_key = '{your api key here}'
    forecast_url = f"https://api.openweathermap.org/data/2.5/forecast?lat={latitude}&lon={longitude}&units=metric&appid={forecast_key}"
    forecast_data=requests.get(forecast_url).json()
    
    if 'list' in forecast_data:
        forecast_list = forecast_data['list']
        today = datetime.now().date()
        current_time = datetime.now().time()
        # Initialize variables
        tempday1, tempnight1 = None, None
        tempday2, tempnight2 = None, None
        tempday3, tempnight3 = None, None
        tempday4, tempnight4 = None, None
        tempday5, tempnight5 = None, None
        
        # Get temperatures for each of the next 5 days
        for entry in forecast_list:
            dt = datetime.fromtimestamp(entry['dt'])
            date = dt.date()
            time = dt.time()
            if date == today:
                if 6 <= time.hour < 18 and tempday1 is None:
                    tempday1 = entry['main']['temp']
                elif time.hour == 0 or (time.hour >= 18 or time.hour < 6) and tempnight1 is None:
                    tempnight1 = entry['main']['temp']
            elif date == (datetime.now().date() + timedelta(days=1)):
                if 6 <= time.hour < 18 and tempday2 is None:
                    tempday2 = entry['main']['temp']
                elif time.hour < 6 and tempnight2 is None:
                    tempnight2 = entry['main']['temp']
            elif date == (datetime.now().date() + timedelta(days=2)):
                if 6 <= time.hour < 18 and tempday3 is None:
                    tempday3 = entry['main']['temp']
                elif time.hour < 6 and tempnight3 is None:
                    tempnight3 = entry['main']['temp']
            elif date == (datetime.now().date() + timedelta(days=3)):
                if 6 <= time.hour < 18 and tempday4 is None:
                    tempday4 = entry['main']['temp']
                elif time.hour < 6 and tempnight4 is None:
                    tempnight4 = entry['main']['temp']
            elif date == (datetime.now().date() + timedelta(days=4)):
                if 6 <= time.hour < 18 and tempday5 is None:
                    tempday5 = entry['main']['temp']
                elif time.hour < 6 and tempnight5 is None:
                    tempnight5 = entry['main']['temp']
    
    #first cell
    firstdayimage=forecast_data['list'][0]['weather'][0]['icon']
    photo1=ImageTk.PhotoImage(file=f"icon/{firstdayimage}.png")
    firstimage.config(image=photo1)
    firstimage.image=photo1
    day1temp.config(text=f"Day:{tempday1}\nNight:{tempnight1}")
    
    #second cell
    seconddayimage=forecast_data['list'][1]['weather'][0]['icon']
    img=(Image.open(f"icon/{seconddayimage}.png"))
    resized_image=img.resize((40,40))
    photo2=ImageTk.PhotoImage(resized_image)
    secondimage.config(image=photo2)
    secondimage.image=photo2
    day2temp.config(text=f"Day:{tempday2}\nNight:{tempnight2}")
    
    #third cell
    thirddayimage=forecast_data['list'][2]['weather'][0]['icon']
    img=(Image.open(f"icon/{thirddayimage}.png"))
    resized_image=img.resize((40,40))
    photo3=ImageTk.PhotoImage(resized_image)
    thirdimage.config(image=photo3)
    thirdimage.image=photo3
    day3temp.config(text=f"Day:{tempday3}\nNight:{tempnight3}")
    
    #fourth cell
    fourthdayimage=forecast_data['list'][3]['weather'][0]['icon']
    img=(Image.open(f"icon/{fourthdayimage}.png"))
    resized_image=img.resize((40,40))
    photo4=ImageTk.PhotoImage(resized_image)
    fourthimage.config(image=photo4)
    fourthimage.image=photo4
    day4temp.config(text=f"Day:{tempday4}\nNight:{tempnight5}")
    
    #fifth cell
    fifthdayimage=forecast_data['list'][4]['weather'][0]['icon']
    img=(Image.open(f"icon/{fifthdayimage}.png"))
    resized_image=img.resize((40,40))
    photo5=ImageTk.PhotoImage(resized_image)
    fifthimage.config(image=photo5)
    fifthimage.image=photo5
    day5temp.config(text=f"Day:{tempday5}\nNight:{tempnight5}")
    
    #days
    first=datetime.now()
    day1.config(text=first.strftime("%A"))
    
    second=first + timedelta(days=1)
    day2.config(text=second.strftime("%A"))
    
    third=first + timedelta(days=2)
    day3.config(text=third.strftime("%A"))
    
    fourth=first + timedelta(days=3)
    day4.config(text=fourth.strftime("%A"))
    
    fifth=first + timedelta(days=4)
    day5.config(text=fifth.strftime("%A"))
        
root=Tk()
root.title("Weather App")
root.geometry("890x470+300+200")
root.configure(bg="#FFDAB9")
root.resizable(False,False)

#icon
image_icon=PhotoImage(file="Images/logo.png")
root.iconphoto(False,image_icon)

Round_box=PhotoImage(file="Images/Rounded Rectangle 1.png")
Label(root,image=Round_box,bg="#FFDAB9").place(x=30,y=110)

#label
label1=Label(root,text="Temperature",font=('Helvetica',11),fg="white",bg="#203243")
label1.place(x=50,y=120)

label2=Label(root,text="Humidity",font=('Helvetica',11),fg="white",bg="#203243")
label2.place(x=50,y=140)

label3=Label(root,text="Pressure",font=('Helvetica',11),fg="white",bg="#203243")
label3.place(x=50,y=160)

label4=Label(root,text="Wind Speed",font=('Helvetica',11),fg="white",bg="#203243")
label4.place(x=50,y=180)

label5=Label(root,text="Description",font=('Helvetica',11),fg="white",bg="#203243")
label5.place(x=50,y=200)

#search box
Search_image=PhotoImage(file="Images/Rounded Rectangle 3.png")
myimage=Label(image=Search_image,bg="#FFDAB9")
myimage.place(x=270,y=120)

weat_image=PhotoImage(file="Images/Layer 7.png")
weatherimage=Label(root,image=weat_image,bg="#203243")
weatherimage.place(x=290,y=127)

textfield=tk.Entry(root,justify='center',width=15,font=('poppins',25,'bold'),bg="#203243",border=0,fg="white")
textfield.place(x=370,y=130 )
textfield.focus()

Search_icon=PhotoImage(file="Images/Layer 6.png")
myimage_icon=Button(image=Search_icon,borderwidth=0,cursor="hand2",bg="#203243",command=getWeather)
myimage_icon.place(x=645,y=125)

#bottom box
frame=Frame(root,width=900,height=180,bg="#212120")
frame.pack(side=BOTTOM)

#bottom boxes
firstbox=PhotoImage(file="Images/Rounded Rectangle 2.png")
secondbox=PhotoImage(file="Images/Rounded Rectangle 2 copy.png")

Label(frame,image=firstbox,bg="#212120").place(x=30,y=20)
Label(frame,image=secondbox,bg="#212120").place(x=300,y=30)
Label(frame,image=secondbox,bg="#212120").place(x=400,y=30)
Label(frame,image=secondbox,bg="#212120").place(x=500,y=30)
Label(frame,image=secondbox,bg="#212120").place(x=600,y=30)

#clock
clock=Label(root,font=("Helvetica",30,'bold'),fg="black",bg="#FFDAB9")
clock.place(x=30,y=20)

#timezone
timezone=Label(root,font=("Helvetica",20,'bold'),fg="black",bg="#FFDAB9")
timezone.place(x=550,y=20)

long_lat=Label(root,font=("Helvetica",10,'bold'),fg="black",bg="#FFDAB9")
long_lat.place(x=550,y=50)

#thpwd
t=Label(root,font=("Helvetica",11),fg="white",bg="#203243")
t.place(x=150,y=120)
h=Label(root,font=("Helvetica",11),fg="white",bg="#203243")
h.place(x=150,y=140)
p=Label(root,font=("Helvetica",11),fg="white",bg="#203243")
p.place(x=150,y=160)
w=Label(root,font=("Helvetica",11),fg="white",bg="#203243")
w.place(x=150,y=180)
d=Label(root,font=("Helvetica",11),fg="white",bg="#203243")
d.place(x=150,y=200)

#first cell
firstframe=Frame(root,width=230,height=132,bg="#2C3E50")
firstframe.place(x=35,y=315)

day1=Label(firstframe,font="arial 20",bg="#2C3E50",fg="#fff")
day1.place(x=100,y=5)

firstimage=Label(firstframe,bg="#2C3E50")
firstimage.place(x=1,y=15)

day1temp=Label(firstframe,bg="#2C3E50",fg="#FFDAB9", font="arial 15 bold")
day1temp.place(x=100,y=50)

#second cell
secondframe=Frame(root,width=70,height=115,bg="#2C3E50")
secondframe.place(x=305,y=325)

day2=Label(secondframe,bg="#2C3E50",fg="#fff")
day2.place(x=10,y=5)

secondimage=Label(secondframe,bg="#2C3E50")
secondimage.place(x=7,y=20)

day2temp=Label(secondframe,bg="#2C3E50",fg="#fff")
day2temp.place(x=10,y=70)

#third cell
thirdframe=Frame(root,width=70,height=115,bg="#2C3E50")
thirdframe.place(x=405,y=325)

day3=Label(thirdframe,bg="#2C3E50",fg="#fff")
day3.place(x=10,y=5)

thirdimage=Label(thirdframe,bg="#2C3E50")
thirdimage.place(x=7,y=20)

day3temp=Label(thirdframe,bg="#2C3E50",fg="#fff")
day3temp.place(x=10,y=70)

#fourth cell
fourthframe=Frame(root,width=70,height=115,bg="#2C3E50")
fourthframe.place(x=505,y=325)

day4=Label(fourthframe,bg="#2C3E50",fg="#fff")
day4.place(x=10,y=5)

fourthimage=Label(fourthframe,bg="#2C3E50")
fourthimage.place(x=7,y=20)

day4temp=Label(fourthframe,bg="#2C3E50",fg="#fff")
day4temp.place(x=10,y=70)

#fifth cell
fifthframe=Frame(root,width=70,height=115,bg="#2C3E50")
fifthframe.place(x=605,y=325)

day5=Label(fifthframe,bg="#2C3E50",fg="#fff")
day5.place(x=10,y=5)

fifthimage=Label(fifthframe,bg="#2C3E50")
fifthimage.place(x=7,y=20)

day5temp=Label(fifthframe,bg="#2C3E50",fg="#fff")
day5temp.place(x=10,y=70)

root.mainloop()